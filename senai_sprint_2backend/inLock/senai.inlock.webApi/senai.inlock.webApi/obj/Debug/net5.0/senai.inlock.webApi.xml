<?xml version="1.0"?>
<doc>
    <assembly>
        <name>senai.inlock.webApi</name>
    </assembly>
    <members>
        <member name="P:senai.inlock.webApi.Controllers.EstudiosController._estudioRepository">
            <summary>
            Objeto _estudioRepository que irá receber todos os métodos definidos na interface IEstudioRepository
            </summary>
        </member>
        <member name="M:senai.inlock.webApi.Controllers.EstudiosController.#ctor">
            <summary>
            Insta o objeto _estudioRepository para que haja a referencia aos metodos do repositorio
            </summary>
        </member>
        <member name="M:senai.inlock.webApi.Controllers.EstudiosController.Get">
            <summary>
            Lista todos os estudios
            </summary>
            <returns>Uma lista de estudios code</returns>
            http://localhost:5000/api/estudios
        </member>
        <member name="M:senai.inlock.webApi.Controllers.EstudiosController.Delete(System.Int32)">
            <summary>
            Deleta um estudio existente
            </summary>
            <param name="id">id do estudio que será deletado</param>
            <returns>Um status code 204 - No Content</returns>
            http://localhost:5000/api/estudios/4
        </member>
        <member name="M:senai.inlock.webApi.Controllers.EstudiosController.Post(senai.inlock.webApi.Domains.EstudioDomain)">
            <summary>
            Cadastra um novo estúdio
            </summary>
            <param name="novoEstudio">objeto novoEstudio com a informacoes cadastradas</param>
            <returns>Retorna um status code</returns>
        </member>
        <member name="M:senai.inlock.webApi.Controllers.EstudiosController.GetById(System.Int32)">
            <summary>
            Busca um estudio através do seu id
            </summary>
            <param name="id">id do estudio que será buscado</param>
            <returns>um estudio buscado ou NotFound caso nenhum estudio seja encontrado</returns>
            http://localhost:5000/api/estudios/1
        </member>
        <member name="M:senai.inlock.webApi.Controllers.EstudiosController.PutId(senai.inlock.webApi.Domains.EstudioDomain)">
            <summary>
            Atualiza um estudio existente passando o seu id pelo corpo da requisicao
            </summary>
            <param name="estudioAtualizado">Objeto estudioAtualizado com as novas informacoes</param>
            <returns>Um status code</returns>
        </member>
        <member name="M:senai.inlock.webApi.Controllers.EstudiosController.GetAll">
            <summary>
            Lista todos os jogos
            </summary>
            <returns>Uma lista de jogos code</returns>
            http://localhost:5000/api/estudios/lista
        </member>
        <member name="M:senai.inlock.webApi.Controllers.EstudiosController.PutIdBody(senai.inlock.webApi.Domains.EstudioDomain)">
            <summary>
            Atualiza um estudio existente passando o seu id pelo corpo da requisicao
            </summary>
            <param name="estudioAtualizado">Objeto estudioAtualizado com as novas informacoes</param>
            <returns>Um status code</returns>
        </member>
        <member name="P:senai.inlock.webApi.Controllers.JogosController._jogoRepository">
            <summary>
            Objeto _jogoRepository que irá receber todos os métodos definidos na interface IJogoRepository
            </summary>
        </member>
        <member name="M:senai.inlock.webApi.Controllers.JogosController.#ctor">
            <summary>
            Insta o objeto _jogoRepository para que haja a referencia aos metodos do repositorio
            </summary>
        </member>
        <member name="M:senai.inlock.webApi.Controllers.JogosController.GetEstudios">
            <summary>
            Lista todos os jogos
            </summary>
            <returns>Uma lista de jogos code</returns>
            http://localhost:5000/api/jogos
        </member>
        <member name="M:senai.inlock.webApi.Controllers.JogosController.Delete(System.Int32)">
            <summary>
            Deleta um jogo existente
            </summary>
            <param name="id">id do jogo que será deletado</param>
            <returns>Um status code 204 - No Content</returns>
            http://localhost:5000/api/jogos/4
        </member>
        <member name="M:senai.inlock.webApi.Controllers.JogosController.Post(senai.inlock.webApi.Domains.JogoDomain)">
            <summary>
            Cadastra um novo jogo
            </summary>
            <param name="novoJogo">objeto novoJogo com a informacoes cadastradas</param>
            <returns>Retorna um status code</returns>
        </member>
        <member name="M:senai.inlock.webApi.Controllers.JogosController.GetById(System.Int32)">
            <summary>
            Busca um jogo através do seu id
            </summary>
            <param name="id">id do jogo que será buscado</param>
            <returns>um jogo buscado ou NotFound caso nenhum jogo seja encontrado</returns>
            http://localhost:5000/api/jogos/1
        </member>
        <member name="M:senai.inlock.webApi.Controllers.JogosController.PutId(senai.inlock.webApi.Domains.JogoDomain)">
            <summary>
            Atualiza um jogo existente passando o seu id pelo corpo da requisicao
            </summary>
            <param name="jogoAtualizado">Objeto jogoAtualizado com as novas informacoes</param>
            <returns>Um status code</returns>
        </member>
        <member name="M:senai.inlock.webApi.Controllers.JogosController.PutIdBody(senai.inlock.webApi.Domains.JogoDomain)">
            <summary>
            Atualiza um jogo existente passando o seu id pelo corpo da requisicao
            </summary>
            <param name="jogoAtualizado">Objeto jogoAtualizado com as novas informacoes</param>
            <returns>Um status code</returns>
        </member>
        <member name="P:senai.inlock.webApi.Controllers.TipoUsuarioController._tiposUsuariosController">
            <summary>
            Objeto _tiposUsuariosController que irá receber todos os métodos definidos na interface ITipoUsuarioRepository
            </summary>
        </member>
        <member name="M:senai.inlock.webApi.Controllers.TipoUsuarioController.#ctor">
            <summary>
            Insta o objeto _tiposUsuariosController para que haja a referencia aos metodos do repositorio
            </summary>
        </member>
        <member name="M:senai.inlock.webApi.Controllers.TipoUsuarioController.Get">
            <summary>
            Lista todos os tipos de usuários
            </summary>
            <returns>Uma lista de tipos usuários code</returns>
        </member>
        <member name="P:senai.inlock.webApi.Controllers.UsuarioController._usuarioRepository">
            <summary>
            Objeto _usuarioRepository que irá receber todos os métodos definidos na interface IUsuarioRepository
            </summary>
        </member>
        <member name="M:senai.inlock.webApi.Controllers.UsuarioController.#ctor">
            <summary>
            Instancia o objeto _usuarioRepository para que haja a referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:senai.inlock.webApi.Controllers.UsuarioController.Login(senai.inlock.webApi.Domains.UsuarioDomain)">
            <summary>
            Faz a autenticação do usuário
            </summary>
            <param name="login">objeto com os dados de e-mail e senha</param>
            <returns>Um status code e, em caso de sucesso, os dados do usuário buscado</returns>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IEstudioRepository.Listar">
            <summary>
            Lista todos os estúdios
            </summary>
            <returns>Uma lista de jogo</returns>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IEstudioRepository.ListarTodos">
            <summary>
            Lista todos os estudios
            </summary>
            <returns>Uma lista de estudios</returns>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IEstudioRepository.Cadastrar(senai.inlock.webApi.Domains.EstudioDomain)">
            <summary>
            Cadastra um novo estúdio
            </summary>
            <param name="novoEstudio">Objeto novoEstudio com as informações que serão cadastradas</param>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IEstudioRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um estúdio através do seu id
            </summary>
            <param name="id">id do estúdio que será buscado</param>
            <returns>um objeto estúdio que foi buscado</returns>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IEstudioRepository.AtualizarIdCorpo(senai.inlock.webApi.Domains.EstudioDomain)">
            <summary>
            Atualiza um estúdio existente passando o id pelo corpo da requisição
            </summary>
            <param name="estudio">Objeto estúdio com as novas informações</param>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IEstudioRepository.AtualizarIdUrl(System.Int32,senai.inlock.webApi.Domains.EstudioDomain)">
            <summary>
            Atualiza um estúdio existente passando o id pelo url da requisição
            </summary>
            <param name="id">id do estúdio que sera atualizado</param>
            <param name="estudio">objeto estúdio com as novas informações</param>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IEstudioRepository.Deletar(System.Int32)">
            <summary>
            Deleta um estúdio existente
            </summary>
            <param name="id">id do estúdio que será deletado</param>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IJogoRepository.ListarTodos">
            <summary>
            Lista todos os jogos
            </summary>
            <returns>Uma lista de jogo</returns>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IJogoRepository.Cadastrar(senai.inlock.webApi.Domains.JogoDomain)">
            <summary>
            Cadastra um novo jogo
            </summary>
            <param name="novoJogo">Objeto novoJogo com as informações que serão cadastradas</param>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IJogoRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um jogo através do seu id
            </summary>
            <param name="id">id do jogo que será buscado</param>
            <returns>um objeto jogo que foi buscado</returns>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IJogoRepository.AtualizarIdCorpo(senai.inlock.webApi.Domains.JogoDomain)">
            <summary>
            Atualiza um jogo existente passando o id pelo corpo da requisição
            </summary>
            <param name="funcionario">Objeto jogo com as novas informações</param>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IJogoRepository.AtualizarIdUrl(System.Int32,senai.inlock.webApi.Domains.JogoDomain)">
            <summary>
            Atualiza um jogo existente passando o id pelo url da requisição
            </summary>
            <param name="id">id do jogo que sera atualizado</param>
            <param name="funcionario">objeto jogo com as novas informações</param>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IJogoRepository.Deletar(System.Int32)">
            <summary>
            Deleta um jogo existente
            </summary>
            <param name="id">id do jogo que será deletado</param>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IUsuarioRepository.BuscarPorEmailSenha(System.String,System.String)">
            <summary>
            Valida o usuário
            </summary>
            <param name="email">e-mail do usuário</param>
            <param name="senha">senha do usuário</param>
            <returns>Um objeto do tipo UsuarioDomain que foi buscado</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "F:senai.inlock.webApi.Interfaces.EstudioRepository.stringConexao" -->
        <member name="M:senai.inlock.webApi.Interfaces.EstudioRepository.AtualizarIdCorpo(senai.inlock.webApi.Domains.EstudioDomain)">
            <summary>
            Atualiza um estudio passando o seu id pelo corpo da requisição
            </summary>
            <param name="estudio">Objeto estudio com as novas informações</param>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.EstudioRepository.AtualizarIdUrl(System.Int32,senai.inlock.webApi.Domains.EstudioDomain)">
            <summary>
            Atualiza um estudio passando o id pelo recurso (URL)
            </summary>
            <param name="id">id do estudio que será atualizado</param>
            <param name="estudio">objeto estudio com as novas informações</param>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.EstudioRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um estudio através do seu id
            </summary>
            <param name="id">id do estudio que  será buscado</param>
            <returns>um estudio buscado ou null caso não seja encontrado</returns>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.EstudioRepository.Cadastrar(senai.inlock.webApi.Domains.EstudioDomain)">
            <summary>
            Cadastra um novo estúdio
            </summary>
            <param name="novoEstudio">objeto novoEstudio com as informacoes que serao cadastradas</param>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.EstudioRepository.Deletar(System.Int32)">
            <summary>
            Deleta um estudio através do seu id
            </summary>
            <param name="id">id do estudio que será deletado</param>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.EstudioRepository.ListarTodos">
            <summary>
            Lista todos os estúdios
            </summary>
            <returns>Uma lista de estúdios</returns>
        </member>
        <member name="F:senai.inlock.webApi.Repositories.JogoRepository.stringConexao">
            <summary>
            String de conexao com o banco de dados que recebe os parametros
            Data Source = nome do servidor
            initial catalog = nome do banco de dados
            user id=sa; pwd=senai@132 faz a autenticacao com o usuario do SQL Server, passando o logon e a senha
            integrated security=true = faz a autenticacao com o usuario do sistema(windows)
            </summary>
        </member>
        <member name="M:senai.inlock.webApi.Repositories.JogoRepository.AtualizarIdCorpo(senai.inlock.webApi.Domains.JogoDomain)">
            <summary>
            Atualiza um jogo passando o seu id pelo corpo da requisição
            </summary>
            <param name="jogo">Objeto jogo com as novas informações</param>
        </member>
        <member name="M:senai.inlock.webApi.Repositories.JogoRepository.AtualizarIdUrl(System.Int32,senai.inlock.webApi.Domains.JogoDomain)">
            <summary>
            Atualiza um jogo passando o id pelo recurso (URL)
            </summary>
            <param name="id">id do jogo que será atualizado</param>
            <param name="jogo">objeto jogo com as novas informações</param>
        </member>
        <member name="M:senai.inlock.webApi.Repositories.JogoRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um jogo através do seu id
            </summary>
            <param name="id">id do jogo que  será buscado</param>
            <returns>um jogo buscado ou null caso não seja encontrado</returns>
        </member>
        <member name="M:senai.inlock.webApi.Repositories.JogoRepository.Cadastrar(senai.inlock.webApi.Domains.JogoDomain)">
            <summary>
            Cadastra um novo jogo
            </summary>
            <param name="novoJogo">objeto novoJogo com as informacoes que serao cadastradas</param>
        </member>
        <member name="M:senai.inlock.webApi.Repositories.JogoRepository.Deletar(System.Int32)">
            <summary>
            Deleta um jogo através do seu id
            </summary>
            <param name="id">id do jogo que será deletado</param>
        </member>
        <member name="M:senai.inlock.webApi.Repositories.JogoRepository.ListarTodos">
            <summary>
            Lista todos os jogos
            </summary>
            <returns>Uma lista de jogos</returns>
        </member>
        <member name="F:senai.inlock.webApi.Repositories.TipoUsuarioRepository.stringConexao">
            <summary>
            String de conexao com o banco de dados que recebe os parametros
            Data Source = nome do servidor
            initial catalog = nome do banco de dados
            user id=sa; pwd=senai@132 faz a autenticacao com o usuario do SQL Server, passando o logon e a senha
            integrated security=true = faz a autenticacao com o usuario do sistema(windows)
            </summary>
        </member>
        <member name="F:senai.inlock.webApi.Repositories.UsuarioRepository.stringConexao">
            <summary>
            String de conexao com o banco de dados que recebe os parametros
            Data Source = nome do servidor
            initial catalog = nome do banco de dados
            user id=sa; pwd=senai@132 faz a autenticacao com o usuario do SQL Server, passando o logon e a senha
            integrated security=true = faz a autenticacao com o usuario do sistema(windows)
            </summary>
        </member>
        <member name="M:senai.inlock.webApi.Repositories.UsuarioRepository.BuscarPorEmailSenha(System.String,System.String)">
            <summary>
            Valida o usuário
            </summary>
            <param name="email">e-mail do usuário</param>
            <param name="senha">senha do usuário</param>
            <returns>Um objeto do tipo UsuarioDomain que foi buscado</returns>
        </member>
    </members>
</doc>
